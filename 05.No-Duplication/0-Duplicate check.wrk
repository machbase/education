{"data":[{"id":"1692141889613594","contents":"# 중복 전송 제거\n다음과 같은 서버의 상황을 고려해야함.\n\n![alt text](http://dl.machbase.com/neodata/dup_send1.png \"dup1\")\n \n데이터 입력 시 사용자 오류나 네트워크 문제로 인해 중복 전송이 발생하는 경우가 있을 수 있으며\n이러한 경우 동일 시간에 중복으로 데이터가 전송됨 (동일 시간, 동일 값) or (동일 시간, 다른 값)\n\n![alt text](http://dl.machbase.com/neodata/dup_send2.png \"dup2\")\n\n중복 전송을 방지하고 첫 번째 데이터를 유지 하기 위해, 마크베이스는 TAG 테이블 내에서 사용 가능한 TAG_DUPLICATE_CHECK_DURATION 속성을 제공\n\n## 테이블에 속성을 적용\n\n적용 방식: 태그 테이블 생성 시에 중복 전송을 제거하는 속성을 포함하면 됨","height":308,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1693184332585846","contents":"DROP TABLE dup_tag;\r\nCREATE TAG TABLE dup_tag (name varchar(20) primary key, time datetime basetime, value double summarized) TAG_DUPLICATE_CHECK_DURATION=1;","height":75,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true,"brief":true},{"id":"1693184365567867","contents":"위의 쿼리를 이용하여 Machbase Neo에서 제공하는 중복전송 방지 기능을 적용가능하며 TAG_DUPLICATE_CHECK_DURATION 속성 다음에 지정한 숫자가 제거 관리 기간임.\r\n\r\n예를 들어 값을 1로 설정하면, 새로 입력된 데이터중 설정기간(1일)내의 데이터와 중북인 데이터가 출력이 안되며 설정기간은 기본 30일이며 최소 1 부터 최대 30까지 설정 가능함.\r\n\r\n## 예시","height":115,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1721964330626881","contents":"INSERT INTO dup_tag VALUES('tag1', '2024-10-01 09:00:00 000:000:001', 0);\r\nINSERT INTO dup_tag VALUES('tag1', '2024-10-02 09:00:00 000:000:001', 0);    \r\nINSERT INTO dup_tag VALUES('tag1', '2024-10-02 09:00:00 000:000:002', 0);\r\nINSERT INTO dup_tag VALUES('tag1', '2024-10-02 09:00:00 000:000:002', 1); -- Duplicate Data\r\nINSERT INTO dup_tag VALUES('tag1', '2024-10-03 09:00:00 000:000:003', 0);\r\n\r\nINSERT INTO dup_tag VALUES('tag2', '2024-10-04 09:00:00 000:000:001', 0);\r\nINSERT INTO dup_tag VALUES('tag2', '2024-10-04 09:00:00 000:000:001', 1); -- Duplicate Data\r\nINSERT INTO dup_tag VALUES('tag2', '2024-10-04 09:00:00 000:000:001', 2); -- Duplicate Data\r\nINSERT INTO dup_tag VALUES('tag2', '2024-10-04 09:00:00 000:000:002', 1);\r\nINSERT INTO dup_tag VALUES('tag2', '2024-10-04 09:00:00 000:000:003', 2);","height":228,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true,"brief":true},{"id":"1721964494313884","contents":"데이터를 입력한 후 쿼리를 수행하면 다음과 같은 결과가 나타남","height":61,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1721964544426776","contents":"SELECT name, to_char(time), value FROM dup_tag where name = 'tag1';","height":57,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1721964571668860","contents":"SELECT name, to_char(time), value FROM dup_tag where name = 'tag2';","height":59,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1721964590591329","contents":"## 결론\r\n중복 전송 제거를 활성화하면 리소스 소비 측면에서 비용이 발생하여 잠재적으로 입력 속도에 영향을 미칠 수 있으며\r\n중복 전송이 많이 발생하는 시나리오가 자주 발생하고 기능을 수동으로 구현하는 것이 어려운 경우 Machbase에서 제공하는 중복 전송 제거 기능을 활용하는 것이 좋음.","height":77,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true}]}
