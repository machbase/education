{"data":[{"id":"1723442884375721","contents":"# 1. 테이블 생성","height":32,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724208002442863","contents":"- 기존 테이블 삭제 후 테이블 생성","height":39,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723442817431462","contents":"Drop table home cascade;     \r\nCreate tag table home( name varchar(25) primary key, time datetime basetime, value double summarized) with rollup(min) extension tag_partition_count=1;   ","height":54,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723516450230524","contents":"- 테이블 구조 확인","height":39,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723443114842154","contents":"show tables -a;","height":52,"lineHeight":19,"minimal":false,"type":"shell","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723443251220748","contents":"# 2. 데이터 로딩\r\n\r\n데이터 내용: 스마트홈데이터셋과 기상 정보 ( 스마트 미터로 부터 수집된 Kw 및 날씨 컨디션 )\r\n\r\n데이터 파일명 : homes-100k.csv \r\n\r\n데이터 건수 : 2,799,972 건\r\n\r\n데이터 기간 : 2016-01-01 14:00:00 ~\t2016-01-02 17:46:38\r\n\r\n태그 수 : 28 개\r\n\r\n- homes-100k.csv 파일의 형식\r\n\r\n```cmd\r\ntime,use [kW],gen [kW],House overall [kW],Dishwasher [kW],Furnace 1 [kW],Furnace 2 [kW],Home office [kW],Fridge [kW],Wine cellar [kW],Garage door [kW],Kitchen 12 [kW],Kitchen 14 [kW],Kitchen 38 [kW],Barn [kW],Well [kW],Microwave [kW],Living room [kW],Solar [kW],temperature,icon,humidity,visibility,summary,apparentTemperature,pressure,windSpeed,cloudCover,windBearing,precipIntensity,dewPoint,precipProbability\r\n1451624400,0.932833333,0.003483333,0.932833333,3.33E-05,0.0207,0.061916667,0.442633333,0.12415,0.006983333,0.013083333,0.000416667,0.00015,0,0.03135,0.001016667,0.004066667,0.001516667,0.003483333,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n1451624401,0.934333333,0.003466667,0.934333333,0,0.020716667,0.063816667,0.444066667,0.124,0.006983333,0.013116667,0.000416667,0.00015,0,0.0315,0.001016667,0.004066667,0.00165,0.003466667,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n1451624402,0.931816667,0.003466667,0.931816667,1.67E-05,0.0207,0.062316667,0.446066667,0.123533333,0.006983333,0.013083333,0.000433333,0.000166667,1.67E-05,0.031516667,0.001,0.004066667,0.00165,0.003466667,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n1451624403,1.02205,0.003483333,1.02205,1.67E-05,0.1069,0.068516667,0.446583333,0.123133333,0.006983333,0.013,0.000433333,0.000216667,0,0.0315,0.001016667,0.004066667,0.001616667,0.003483333,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n1451624404,1.1394,0.003466667,1.1394,0.000133333,0.236933333,0.063983333,0.446533333,0.12285,0.00685,0.012783333,0.00045,0.000333333,0,0.0315,0.001016667,0.004066667,0.001583333,0.003466667,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n...\r\n```\r\n- 마크베이스에 저장되는 형식\r\n\r\n```cmd\r\nuse [kW],1451624400,0.03135\r\ngen [kW],1451624400,24.4\r\nHouse overall [kW],1451624400,3.33e-05\r\nDishwasher [kW],1451624400,0.12415\r\nFurnace 1 [kW],1451624400,0.0207\r\nFurnace 2 [kW],1451624400,0.0130833\r\nHome office [kW],1451624400,0.00348333\r\nFridge [kW],1451624400,0.442633\r\nWine cellar [kW],1451624400,0.932833\r\nGarage door [kW],1451624400,0.62\r\n…\r\n```","height":379,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724208289711884","contents":"- 데이터 로딩을 위한 TQL 구문","height":78,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723443297059637","contents":"CSV(file(\"/education/Practice/home-100k.csv\"))\r\nPOPVALUE(20)\r\nPOPVALUE(26)\r\nPOPVALUE(22)\r\nTRANSPOSE(header(true), fixed(0))\r\nPUSHVALUE(0, strTrimSpace(value(1)), \"name\")\r\nMAPVALUE(1, parseTime(value(1), 's','UTC'), 'time')\r\nPOPVALUE(2)\r\nMAPVALUE(2, parseFloat(value(2)), \"value\")\r\nAPPEND(table(\"home\"))","height":207,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"text","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172344599571562","contents":"- 로딩된 데이터 확인","height":45,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723446026222648","contents":"--메타데이터 조회\r\nselect * from _home_meta;\r\n--건수 조회\r\nselect count(*) from home;                                   \r\n--데이터 시간 범위 조회\r\nselect to_char(min(time)), to_char(max(time)) from home;     ","height":144,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"1723446989891534","contents":"# 3. TAG 테이블 활용\r\nraw 데이터 조회\r\n-----","height":85,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723447262564930","contents":"-- use [kW] 태그의 시간 범위\r\nselect to_char(min(time)), to_char(max(time)) from home where name = 'use [kW]';\r\n\r\n-- humidity 태그의 하루 건수 \r\nselect count(*) from home where name = 'humidity' and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-02 13:59:59');\r\n\r\n-- 태그 및 시간을 조회 조건으로 raw 데이터 조회\r\nselect name, to_char(time), value from home where name = 'windSpeed' and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-01 15:00:00') limit 100;\r\n\r\n-- 태그 및 시간을 조회 조건으로 역방향 raw 데이터 조회 (가장 최근 데이터 부터 100건)\r\nselect /*+ SCAN_BACKWARD(home) */ name, to_char(time), value from home where name = 'Solar [kW]' and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-01 15:00:00') limit 100;","height":242,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"1724208953241592","contents":"데이터 시각화\r\n-----","height":55,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724207616072611","contents":"- 태그는 windSpeed 시간은 2016년 1월 1일 14시 부터 15시 까지 한시간 동안의 데이터 중 과거 데이터 부터 1000건 조회 -> CHART_LINE 으로 시각화","height":35,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723600331149301","contents":"SQL( \r\n    `select time, value from home \r\n     where name = 'windSpeed' \r\n     and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-01 15:00:00') \r\n     limit 1000` \r\n)\r\nCHART_LINE()","height":181,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724207746316728","contents":"- 태그는 windSpeed 시간은 2016년 1월 1일 14시 부터 15시 까지 한시간 동안의 데이터 중 과거 데이터 부터 1000건 조회 -> CHART로 시각화\r\n(아파치 ECharts의에서 제공하는 옵션 사용 가능)","height":95,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723613201202657","contents":"SQL( \r\n    `select to_char(time), value from home \r\n    where name = 'windSpeed' \r\n    and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-01 15:00:00') \r\n    limit 1000`\r\n)\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"태그 및 시간을 조회 조건으로 raw 데이터 조회\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"avg\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":368,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724208616900586","contents":"- 태그는 Solar 시간은 2016년 1월 1일 14시 부터 15시 까지 한시간 동안의 데이터 중 과거 데이터 부터 1000건 조회 -> CHART_LINE 으로 시각화","height":41,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723599671171134","contents":"SQL( \r\n    `select time, value from home \r\n     where name = 'Solar [kW]' \r\n     and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-01 15:00:00') \r\n     limit 1000` \r\n)\r\nCHART_LINE()","height":168,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724208667678129","contents":"- 태그는 Solar 시간은 2016년 1월 1일 14시 부터 15시 까지 한시간 동안의 데이터 중 과거 데이터 부터 1000건 조회 -> CHART 로 시각화\r\n(아파치 ECharts의에서 제공하는 옵션 사용 가능)","height":85,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723613259984805","contents":"SQL( \r\n    `select to_char(time), value from home \r\n     where name = 'Solar [kW]' \r\n     and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-01 15:00:00')\r\n     limit 1000` \r\n)\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"태그 및 시간을 조회 조건으로 raw 데이터 조회\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"avg\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":380,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"text","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723447008865352","contents":"# 4. 롤업 테이블 활용\r\n롤업 강제 수행\r\n-----","height":76,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724209261547819","contents":"exec rollup_force;         --hour rollup 생성을 위함","height":49,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1724209364387178","contents":"롤업 데이터 조회\r\n-----","height":59,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723447667993400","contents":"-- gen [kW] 태그의 1시간 데이터에 대해서 1분 당 시작값, 마지막 조회 \r\nselect to_char(rollup('min', 1, time)) time, first(time, value), last(time, value) from home \r\nwhere name = 'gen [kW]' and time between to_date('2016-01-01 15:00:00') and to_date('2016-01-01 15:59:59') \r\ngroup by time order by time;    \r\n\r\n-- gen [kW] 태그의 2시간 데이터에 대해서 10분 당 평균값 조회\r\nselect to_char(rollup('min', 10, time)) time, avg(value) from home \r\nwhere name = 'gen [kW]' and time between to_date('2016-01-01 15:00:00') and to_date('2016-01-01 16:59:59') \r\ngroup by time order by time;     \r\n\r\n-- gen [kW] 태그의 2일간 데이터에 대해서 2시간 당 최소값, 최대값 조회\r\nselect to_char(rollup('hour', 2, time)) time, min(value), max(value) from home \r\nwhere name = 'gen [kW]' and time >= to_date('2016-01-01') and time < to_date('2016-01-03') \r\ngroup by time order by time;     \r\n\r\n-- gen [kW] 태그의 전체 데이터에 대해서 1일 당 최소값, 최대값 조회\r\nselect to_char(rollup('day', 1, time)) time, count(value), sum(value) from home \r\nwhere name = 'gen [kW]' \r\ngroup by time order by time;     ","height":398,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"172420939857684","contents":"데이터 시각화\r\n-----\r\n- gen [kW] 태그의 2시간 데이터에 대해서 10분 당 평균값 조회 -> CHART 로 시각화","height":87,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723610808907953","contents":"SQL( \r\n    `select to_char(rollup('min', 10, time)) time, avg(value) from home \r\n     where name = 'gen [kW]' and time between to_date('2016-01-01 15:00:00') and to_date('2016-01-01 16:59:59') \r\n     group by time \r\n     order by time` \r\n)\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"gen [kW] 태그의 2시간 데이터에 대해서 10분 당 평균값 조회\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"avg\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":393,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724209534747684","contents":"- gen [kW] 태그의 1시간 데이터에 대해서 1분 당 시작값, 마지막 조회 -> CHART 로 시각화","height":74,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172361179784828","contents":"SQL ( \r\n    `select to_char(rollup('min', 1, time)) time, first(time, value), last(time, value) from home\r\n     where name = 'gen [kW]' \r\n     and time between to_date('2016-01-01 15:00:00') and to_date('2016-01-01 15:59:59') \r\n     group by time \r\n     order by time` \r\n)\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"gen [kW] 태그의 1시간 데이터에 대해서 1분 당 시작값, 마지막 조회\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"first\"},\r\n                {type:\"line\", data:column(2), name:\"last\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":409,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724209581919772","contents":"- gen [kW] 태그의 2일간 데이터에 대해서 1시간 당 최소값, 최대값 조회 -> CHART 로 시각화","height":62,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723612487020473","contents":"SQL( \r\n    `select to_char(rollup('hour', 2, time)) time, min(value), max(value) from home \r\n     where name = 'gen [kW]' \r\n     and time >= to_date('2016-01-01') and time < to_date('2016-01-03') \r\n     group by time \r\n     order by time` \r\n)\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"gen [kW] 태그의 2일간 데이터에 대해서 1시간 당 최소값, 최대값 조회\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"min(value)\"},\r\n                {type:\"line\", data:column(2), name:\"max(value)\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":426,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723449465401655","contents":"# 5. 통계 정보 조회\r\nv$home_stat 의 구조\r\n-----","height":73,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172344959031064","contents":"desc v$home_stat;","height":51,"lineHeight":19,"minimal":false,"type":"shell","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724209772281721","contents":"v$home_stat 조회\r\n-----","height":63,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724209827478554","contents":"select * from v$home_stat;","height":59,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"172344968282797","contents":"select name, row_count from v$home_stat order by 1;          --태그별 건수 조회(통계정보 사용)\r\n\r\nselect name, count(*) from home group by name order by 1;    --태그별 건수 조회(tag 테이블 사용)\r\n\r\nselect name, min_value, max_value from v$home_stat where name in ('Barn [kW]', 'temperature') order by name;    --태그별 최소 값, 최대 값 조회","height":114,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"1724213399174663","contents":"# 6. 중복 제거","height":60,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724213525087225","contents":"중복 데이터 입력\r\n-----","height":74,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724215105336948","contents":"INSERT INTO home VALUES('Pneumatic', '2025-01-01 09:00:00 000:000:001', 0.3);\r\nINSERT INTO home VALUES('Pneumatic', '2025-01-02 09:00:00 000:000:001', 0.4);    \r\nINSERT INTO home VALUES('Pneumatic', '2025-01-03 09:00:00 000:000:002', 0.5);\r\nINSERT INTO home VALUES('Pneumatic', '2025-01-02 09:00:00 000:000:002', 1.1);\r\nINSERT INTO home VALUES('Pneumatic', '2025-01-03 09:00:00 000:000:003', 0.6);\r\nINSERT INTO home VALUES('Pneumatic', '2025-01-01 09:00:00 000:000:001', 0.7); ","height":162,"lineHeight":19,"minimal":false,"type":"shell","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724213541106591","contents":"중복 제거 확인\r\n-----","height":85,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724215280501216","contents":"SELECT name, to_char(TIME), value FROM home WHERE NAME = 'Pneumatic'; ","height":62,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723516616629983","contents":"# 7. 이상치 제거","height":38,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724220444854911","contents":"상한값, 하한값 설정\r\n-----","height":59,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723516897440138","contents":"ALTER TABLE _home_meta ADD COLUMN (lsl DOUBLE LOWER LIMIT);  -- 메타 테이블에 하한값 컬럼 추가\r\n\r\nALTER TABLE _home_meta ADD COLUMN (usl DOUBLE UPPER LIMIT);  -- 메타 테이블에 상한값 컬럼 추가","height":84,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1724220489318502","contents":"상한값 하한값 적용\r\n-----","height":64,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724220552321594","contents":"INSERT INTO home metadata VALUES ('Heat_Temp', 90.0, 120.0);  -- 태그명과 하한값 및 상한값 입력 예시\r\n\r\nSELECT * FROM _home_meta where name = 'Heat_Temp';            -- 적용된 값 확인","height":100,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"172422064377688","contents":"- 이상치 제거 예시","height":57,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724220709962981","contents":"INSERT INTO home VALUES ('Heat_Temp', NOW, 87.2); \r\n\r\nINSERT INTO home VALUES ('Heat_Temp', NOW, 100.0);\r\n\r\nINSERT INTO home VALUES ('Heat_Temp', NOW, 115.5); \r\n\r\nINSERT INTO home VALUES ('Heat_Temp', NOW, 120.0); \r\n\r\nINSERT INTO home VALUES ('Heat_Temp', NOW, 125.5); ","height":191,"lineHeight":19,"minimal":false,"type":"shell","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723516590356860","contents":"# 8. 데이터 보존 정책","height":62,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723516773228297","contents":"-- 생성\r\nCREATE RETENTION policy_1m_1d DURATION 1 MONTH INTERVAL 1 DAY;\r\n\r\n-- 보존 정책 조회\r\nSELECT * FROM M$RETENTION;\r\n\r\n-- tag 테이블에 앞에서 생성한 보존 정책 policy_1m_1d를 적용\r\nALTER TABLE home ADD RETENTION policy_1m_1d;\r\n\r\n-- tag 테이블에 적용되었는지 확인\r\nSELECT * FROM V$RETENTION_JOB;","height":223,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723446264149659","contents":"# 9. 백업 및 마운트 \r\n전체 백업\r\n-----","height":96,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723446408452370","contents":"backup database into disk='FullBackup';  -- 데이터 베이스 전체 백업 수행 (FullBackup이란 폴더를 만들고 해당 폴더에 전체 백업을 수행함: 경로 지정 가능하며 기본 경로는 dbs 디렉토리임)\r\n\r\nmount database 'FullBackup' to mntdb1;   -- 마운트 명령을 이용하여 FullBackup 마운트 \r\n\r\nselect count(*) from mntdb1.sys.home;     -- 마운트디비에서 tag 테이블 건수 조회\r\n\r\nselect to_char(min(time)), to_char(max(time)) from mntdb1.sys.home;   -- 마운트한 테이블의 최소 시간, 최대 시간 조회\r\n\r\nselect name, to_char(time), value from mntdb1.sys.home limit 5;       -- 마운트한 테이블의 데이터 조회\r\n\r\numount database mntdb1;                  -- 언마운트 명령을 이용하여 FullBackup 마운트를 해제\r\n\r\nselect count(*) from mntdb1.sys.home;     -- 에러 발생 ","height":299,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723449065348374","contents":"- 테이블 백업 전 데이터 삭제","height":69,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723449107684351","contents":"delete from home before to_date('2016-01-02 02:00:00');      -- 2016-01-02 02시 이전 데이터를 삭제   \r\n\r\nselect count(*) from home;                                   -- 데이터 삭제후 건수 조회\r\n\r\nselect to_char(min(time)), to_char(max(time)) from home;     -- 데이터 삭제후 데이터의 시간 범위 조회","height":118,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723448727439678","contents":"테이블 백업\r\n-----","height":63,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723449270387278","contents":"BACKUP TABLE home INTO DISK = 'TB_HOME';                              -- 테이블 백업을 수행 ( TB_TAG 폴더 아래에 테이블 백업 파일을 저장 )\r\n\r\nmount database 'TB_HOME' to mntdb2;                                   -- 테이블 백업 데이터를 마운트\r\n\r\nselect count(*) from mntdb2.sys.home;                                 -- 마운트한 테이블의 건수 확인\r\n\r\nselect to_char(min(time)), to_char(max(time)) from mntdb2.sys.home;   -- 마운트한 테이블의 데이터 시간 범위 확인\r\n\r\nselect name, to_char(time), value from mntdb2.sys.home limit 5;       -- 마운트한 테이블의 데이터 조회\r\n\r\numount database mntdb2;                                               -- 마운트 해제","height":251,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"172421388705239","contents":"기간 지정 백업\r\n-----","height":65,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"17242162361381000","contents":"select to_char(min(time)), to_char(max(time)) from home where time > to_date('2016-01-02 03:00:00') and time < to_date('2016-01-02 05:00:00');   -- 시간 범위 조회\r\n\r\nselect count(*) from home where time > to_date('2016-01-02 03:00:00') and time < to_date('2016-01-02 05:00:00');    --건수 조회 201572\r\n\r\nBACKUP TABLE home FROM TO_DATE('2016-01-02 03:00:01','YYYY-MM-DD HH24:MI:SS')\r\n                    TO TO_DATE('2016-01-02 04:59:59','YYYY-MM-DD HH24:MI:SS')\r\n                    INTO DISK = 'TB_HOME_20160102_TM03-05HOUR';  --백업 수행\r\n\r\nmount database 'TB_HOME_20160102_TM03-05HOUR' to mntdb3;         --기간 지정 테이블 백업 데이터 마운트\r\n\r\nselect count(*) from mntdb3.sys.home;                            --건수 확인\r\n\r\nselect name, to_char(time), value from mntdb3.sys.home limit 5;  --마운트한 테이블의 데이터 조회\r\n\r\numount database mntdb3;                                         --마운트 해제","height":320,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1724221351593645","contents":"# 10. 관리 및 모니터링\r\nSHOW 명령\r\n-----\r\n- tag 테이블 데이터 처리 현황 조회","height":113,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172422585725762","contents":"show tagindexgap;\r\nshow rollupgap;","height":74,"lineHeight":19,"minimal":false,"type":"shell","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724221445334753","contents":"메타 테이블\r\n-----\r\n- 테이블 관련 정보 조회","height":102,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172422602569836","contents":"select * from m$sys_tables;            --사용자가 생성한 테이블 정보\r\nselect * from m$sys_table_property;    --사용자가 생성한 테이블의 속성","height":73,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"1724221516495990","contents":"가상 테이블\r\n-----\r\n- 테이블 사용량 정보 조회","height":81,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724226041851293","contents":"select * from V$STORAGE;                    --디스크 테이블의 사량\r\nselect * from V$STORAGE_DC_VOLATILE_TABLE;  --메모리 테이블의 사용량","height":68,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"172422156466634","contents":"실행 계획 정보\r\n-----\r\n- 쿼리 튜닝 시 조회","height":95,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1724221607337915","contents":"explain select * from home limit 100;\r\nexplain --full select * from home where name ='pressure';","height":97,"lineHeight":19,"minimal":false,"type":"shell","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true}]}
