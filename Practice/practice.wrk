{"data":[{"id":"1723442884375721","contents":"# 1. 실습을 위한 테이블 생성","height":32,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723442817431462","contents":"Drop table tag cascade;     -- 테이블 삭제\r\nCreate tag table tag( name varchar(25) primary key, time datetime basetime, value double summarized) with rollup(min) extension tag_partition_count=1;      --테이블 생성","height":67,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723516450230524","contents":"테이블 구조 확인","height":39,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723443114842154","contents":"show tables -a;","height":52,"lineHeight":19,"minimal":false,"type":"shell","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723443914059625","contents":"# 2. 중복 체크\r\n\r\n데이터 입력","height":78,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723444189973501","contents":"INSERT INTO tag VALUES('Pneumatic', '2024-01-01 09:00:00 000:000:001', 0.3);\r\nINSERT INTO tag VALUES('Pneumatic', '2024-01-02 09:00:00 000:000:001', 0.4);    \r\nINSERT INTO tag VALUES('Pneumatic', '2024-01-02 09:00:00 000:000:002', 0.5);\r\nINSERT INTO tag VALUES('Pneumatic', '2024-01-02 09:00:00 000:000:002', 1.1); -- Duplicate Data\r\nINSERT INTO tag VALUES('Pneumatic', '2024-01-03 09:00:00 000:000:003', 0.6);\r\n\r\nINSERT INTO tag VALUES('Hydraulics', '2024-01-04 09:00:00 000:000:001', 0.7);\r\nINSERT INTO tag VALUES('Hydraulics', '2024-01-04 09:00:00 000:000:001', 1.2); -- Duplicate Data\r\nINSERT INTO tag VALUES('Hydraulics', '2024-01-04 09:00:00 000:000:002', 1.3);\r\nINSERT INTO tag VALUES('Hydraulics', '2024-01-04 09:00:00 000:000:003', 2.4);\r\nINSERT INTO tag VALUES('Hydraulics', '2024-01-04 09:00:00 000:000:001', 2.3); -- Duplicate Data","height":224,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723444335191428","contents":"데이터 중복 제거 확인","height":52,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723444256340799","contents":"SELECT name, to_char(TIME), value FROM tag WHERE NAME = 'Pneumatic';","height":37,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723444411955958","contents":"SELECT name, to_char(TIME), value FROM tag WHERE NAME = 'Hydraulics';","height":30,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723621243347877","contents":"중복 체크 실습 데이터 및 태그 삭제","height":200,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723598211556560","contents":"DELETE FROM tag WHERE name = 'Pneumatic';\r\nDELETE FROM tag WHERE name = 'Hydraulics';\r\n\r\nDELETE FROM tag metadata WHERE name = 'Pneumatic';\r\nDELETE FROM tag metadata WHERE name = 'Hydraulics';","height":124,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723443251220748","contents":"# 3. 실습을 위한 데이터 로딩\r\n\r\n데이터 내용: 스마트홈데이터셋과 기상 정보 ( 스마트 미터로 부터 수집된 Kw 및 날씨 컨디션 )\r\n\r\n데이터 파일명 : homes-100k.csv \r\n\r\n데이터 건수 : 2,799,972 건\r\n\r\n데이터 기간 : 2016-01-01 14:00:00 ~\t2016-01-02 17:46:38\r\n\r\n태그 수 : 28 개\r\n\r\n```cmd\r\ntime,use [kW],gen [kW],House overall [kW],Dishwasher [kW],Furnace 1 [kW],Furnace 2 [kW],Home office [kW],Fridge [kW],Wine cellar [kW],Garage door [kW],Kitchen 12 [kW],Kitchen 14 [kW],Kitchen 38 [kW],Barn [kW],Well [kW],Microwave [kW],Living room [kW],Solar [kW],temperature,icon,humidity,visibility,summary,apparentTemperature,pressure,windSpeed,cloudCover,windBearing,precipIntensity,dewPoint,precipProbability\r\n1451624400,0.932833333,0.003483333,0.932833333,3.33E-05,0.0207,0.061916667,0.442633333,0.12415,0.006983333,0.013083333,0.000416667,0.00015,0,0.03135,0.001016667,0.004066667,0.001516667,0.003483333,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n1451624401,0.934333333,0.003466667,0.934333333,0,0.020716667,0.063816667,0.444066667,0.124,0.006983333,0.013116667,0.000416667,0.00015,0,0.0315,0.001016667,0.004066667,0.00165,0.003466667,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n1451624402,0.931816667,0.003466667,0.931816667,1.67E-05,0.0207,0.062316667,0.446066667,0.123533333,0.006983333,0.013083333,0.000433333,0.000166667,1.67E-05,0.031516667,0.001,0.004066667,0.00165,0.003466667,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n1451624403,1.02205,0.003483333,1.02205,1.67E-05,0.1069,0.068516667,0.446583333,0.123133333,0.006983333,0.013,0.000433333,0.000216667,0,0.0315,0.001016667,0.004066667,0.001616667,0.003483333,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n1451624404,1.1394,0.003466667,1.1394,0.000133333,0.236933333,0.063983333,0.446533333,0.12285,0.00685,0.012783333,0.00045,0.000333333,0,0.0315,0.001016667,0.004066667,0.001583333,0.003466667,36.14,clear-night,0.62,10,Clear,29.26,1016.91,9.18,cloudCover,282,0,24.4,0\r\n...\r\n```\r\n\r\n```cmd\r\nbarn,1451624400,0.03135\r\ndew_point,1451624400,24.4\r\ndishwasher,1451624400,3.33e-05\r\nfridge,1451624400,0.12415\r\nfurnace,1451624400,0.0207\r\ngarage_door,1451624400,0.0130833\r\ngen,1451624400,0.00348333\r\nhome_office,1451624400,0.442633\r\nhouse_overall,1451624400,0.932833\r\nhumidity,1451624400,0.62\r\n…\r\n```","height":379,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723443297059637","contents":"CSV(file(\"/education/Practice/home-100k.csv\"))\r\nPOPVALUE(20)\r\nPOPVALUE(26)\r\nPOPVALUE(22)\r\nTRANSPOSE(header(true), fixed(0))\r\nPUSHVALUE(0, strTrimSpace(value(1)), \"name\")\r\nMAPVALUE(1, parseTime(value(1), 's','UTC'), 'time')\r\nPOPVALUE(2)\r\nMAPVALUE(2, parseFloat(value(2)), \"value\")\r\nAPPEND(table(\"tag\"))","height":207,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"text","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172344599571562","contents":"로딩된 데이터 확인","height":45,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723446026222648","contents":"select * from _tag_meta;\r\nselect count(*) from tag;\r\nselect to_char(min(time)), to_char(max(time)) from tag;","height":70,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"1723446989891534","contents":"# 4. Raw 데이터 조회","height":41,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723447262564930","contents":"-- use [kW] 태그의 시간 범위\r\nselect to_char(min(time)), to_char(max(time)) from tag where name = 'use [kW]';\r\n\r\n-- humidity 태그의 하루 건수 \r\nselect count(*) from tag where name = 'humidity' and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-02 13:59:59');\r\n\r\n-- 태그 및 시간을 조회 조건으로 raw 데이터 조회\r\nselect name, to_char(time), value from tag where name = 'windSpeed' and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-01 15:00:00') limit 100;\r\n\r\n-- 태그 및 시간을 조회 조건으로 역방향 raw 데이터 조회 (가장 최근 데이터 부터 100건)\r\nselect /*+ SCAN_BACKWARD(tag) */ name, to_char(time), value from tag where name = 'Solar [kW]' and time between to_date('2016-01-01 14:00:00') and to_date('2016-01-01 15:00:00') limit 100;","height":242,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"1723600331149301","contents":"SQL( 'select time, value from tag where name = \\'windSpeed\\' and time between to_date(\\'2016-01-01 14:00:00\\') and to_date(\\'2016-01-01 15:00:00\\') limit 100' )\r\nCHART_LINE()","height":52,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723613201202657","contents":"SQL( 'select to_char(time), value from tag where name = \\'windSpeed\\' and time between to_date(\\'2016-01-01 14:00:00\\') and to_date(\\'2016-01-01 15:00:00\\') limit 100' )\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"태그 및 시간을 조회 조건으로 raw 데이터 조회\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"avg\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":265,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723599671171134","contents":"SQL( 'select /*+ SCAN_BACKWARD(tag) */ time, value from tag where name = \\'Solar [kW]\\' and time between to_date(\\'2016-01-01 14:00:00\\') and to_date(\\'2016-01-01 15:00:00\\') limit 100' )\r\nCHART_LINE()","height":72,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723613259984805","contents":"SQL( 'select /*+ SCAN_BACKWARD(tag) */ to_char(time), value from tag where name = \\'Solar [kW]\\' and time between to_date(\\'2016-01-01 14:00:00\\') and to_date(\\'2016-01-01 15:00:00\\') limit 100' )\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"태그 및 시간을 조회 조건으로 역방향 raw 데이터 조회 (가장 최근 데이터 부터 100건)\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"avg\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":278,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723447008865352","contents":"# 5. 롤업 데이터 조회","height":60,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723447667993400","contents":"exec rollup_force; -- Rollup 강제 수행\r\n\r\nselect to_char(rollup('min', 1, time)) time, first(time, value), last(time, value) from tag \r\nwhere name = 'gen [kW]' and time between to_date('2016-01-01 15:00:00') and to_date('2016-01-01 15:59:59') \r\ngroup by time order by time;    -- gen [kW] 태그의 1시간 데이터에 대해서 1분 당 시작값, 마지막 조회 \r\n\r\nselect to_char(rollup('min', 10, time)) time, avg(value) from tag \r\nwhere name = 'gen [kW]' and time between to_date('2016-01-01 15:00:00') and to_date('2016-01-01 16:59:59') \r\ngroup by time order by time;    -- gen [kW] 태그의 2시간 데이터에 대해서 10분 당 평균값 조회 \r\n\r\nselect to_char(rollup('hour', 2, time)) time, min(value), max(value) from tag \r\nwhere name = 'gen [kW]' and time >= to_date('2016-01-01') and time < to_date('2016-01-03') \r\ngroup by time order by time;    -- gen [kW] 태그의 2일간 데이터에 대해서 1시간 당 최소값, 최대값 조회 \r\n\r\nselect to_char(rollup('day', 1, time)) time, count(value), sum(value) from tag \r\nwhere name = 'gen [kW]' \r\ngroup by time order by time;    -- gen [kW] 태그의 전체 데이터에 대해서 1일 당 최소값, 최대값 조회 ","height":299,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"1723610808907953","contents":"SQL( 'select rollup(\\'min\\', 10, time) time, avg(value) from tag where name = \\'gen [kW]\\' and time between to_date(\\'2016-01-01 15:00:00\\') and to_date(\\'2016-01-01 16:59:59\\') group by time order by time' )\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"gen [kW] 태그의 2시간 데이터에 대해서 10분 당 평균값 조회\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"avg\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":300,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172361179784828","contents":"SQL ( 'select rollup(\\'min\\', 1, time) time, first(time, value), last(time, value) from tag where name = \\'gen [kW]\\' and time between to_date(\\'2016-01-01 15:00:00\\') and to_date(\\'2016-01-01 15:59:59\\') group by time order by time' )\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"gen [kW] 태그의 1시간 데이터에 대해서 1분 당 시작값, 마지막 조회\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"first\"},\r\n                {type:\"line\", data:column(2), name:\"last\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":309,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723612487020473","contents":"SQL( 'select rollup(\\'hour\\', 2, time) time, min(value), max(value) from tag where name = \\'gen [kW]\\' and time >= to_date(\\'2016-01-01\\') and time < to_date(\\'2016-01-03\\') group by time order by time' )\r\nCHART(  size(\"1450px\", \"300px\"),\r\n        theme(\"dark\"),\r\n        chartOption({\r\n            title:{ text:\"gen [kW] 태그의 2일간 데이터에 대해서 1시간 당 최소값, 최대값 조회\" },\r\n            xAxis:{ data:column(0), axisLabel:{show: true} },\r\n            yAxis:{},\r\n            series:[\r\n                {type:\"line\", data:column(1), name:\"min(value)\"},\r\n                {type:\"line\", data:column(2), name:\"max(value)\"},\r\n            ],\r\n            legend:{ bottom: 10 }\r\n        })\r\n)","height":313,"lineHeight":19,"minimal":false,"type":"tql","tqlType":"html","lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723449465401655","contents":"# 6. 통계 정보 조회","height":50,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172344959031064","contents":"desc v$tag_stat;\r\n\r\nselect * from v$tag_stat;","height":84,"lineHeight":19,"minimal":false,"type":"shell","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172344968282797","contents":"select name, row_count from v$tag_stat order by 1;\r\n\r\nselect name, count(*) from tag group by name order by 1;\r\n\r\nselect name, min_value, max_value from v$tag_stat order by name;","height":125,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":false},{"id":"1723516590356860","contents":"# 7. 데이터 보존 정책","height":62,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723516773228297","contents":"-- 생성\r\nCREATE RETENTION policy_1m_1d DURATION 1 MONTH INTERVAL 1 DAY;\r\n\r\n-- 보존 정책 조회\r\nSELECT * FROM M$RETENTION;\r\n\r\n-- tag 테이블에 앞에서 생성한 보존 정책 policy_1m_1d를 적용\r\nALTER TABLE tag ADD RETENTION policy_1m_1d;\r\n\r\n-- tag 테이블에 적용되었는지 확인\r\nSELECT * FROM V$RETENTION_JOB;","height":223,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723516616629983","contents":"# 8. 이상치 제거","height":38,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723516897440138","contents":"ALTER TABLE _tag_meta ADD COLUMN (lsl DOUBLE LOWER LIMIT);  -- 메타 테이블에 하한값 컬럼 추가\r\n\r\nALTER TABLE _tag_meta ADD COLUMN (usl DOUBLE UPPER LIMIT);  -- 메타 테이블에 상한값 컬럼 추가\r\n\r\nINSERT INTO tag metadata VALUES ('Heat_Temp', 90.0, 120.0);  -- 태그명과 하한값 및 상한값 입력 예시\r\n\r\nSELECT * FROM _tag_meta where name = 'Heat_Temp';\r\n\r\nINSERT INTO tag VALUES ('Heat_Temp', NOW, 87.2);  --실패 ( 하한값 보다 작음 )\r\n\r\nINSERT INTO tag VALUES ('Heat_Temp', NOW, 100.0); --성공 \r\n\r\nINSERT INTO tag VALUES ('Heat_Temp', NOW, 115.5); --성공\r\n\r\nINSERT INTO tag VALUES ('Heat_Temp', NOW, 120.0); --성공\r\n\r\nINSERT INTO tag VALUES ('Heat_Temp', NOW, 125.5); --실패 ( 상한값 보다 큼 )","height":307,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723446264149659","contents":"# 9. 전체 백업 및 데이터 마운트","height":38,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723446408452370","contents":"backup database into disk='FullBackup'; -- 데이터 베이스 전체 백업 수행 (FullBackup이란 폴더를 만들고 해당 폴더에 전체 백업을 수행함: 경로 지정 가능하며 기본 경로는 dbs 디렉토리임)\r\n\r\nmount database 'FullBackup' to mntdb1;   -- 마운트 명령을 이용하여 FullBackup 마운트 \r\n\r\nselect count(*) from mntdb1.sys.tag;     -- 마운트디비에서 tag 테이블 건수 조회\r\n\r\nselect to_char(min(time)), to_char(max(time)) from mntdb1.sys.tag;   -- 마운트한 테이블의 최소 시간, 최대 시간 조회\r\n\r\numount database mntdb1;                  -- 언마운트 명령을 이용하여 FullBackup 마운트를 해제\r\n\r\nselect count(*) from mntdb1.sys.tag;     -- 에러 발생 ","height":243,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723449065348374","contents":"# 10. 데이터 삭제","height":69,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723449107684351","contents":"delete from tag before to_date('2016-01-02 02:00:00');      -- 2016-01-02 02시 이전 데이터를 삭제   \r\n\r\nselect count(*) from tag;                                   -- 데이터 삭제후 건수 조회  1590347건\r\n\r\nselect to_char(min(time)), to_char(max(time)) from tag;     -- 데이터 삭제후 데이터의 시간 범위 조회","height":118,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1723448727439678","contents":"# 11. 테이블 백업 및 데이터 마운트","height":63,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1723449270387278","contents":"BACKUP TABLE TAG INTO DISK = 'TB_TAG';                               -- 테이블 백업을 수행 ( TB_TAG 폴더 아래에 테이블 백업 파일을 저장 )\r\n\r\nmount database 'TB_TAG' to mntdb2;                                   -- 테이블 백업 데이터를 마운트\r\n\r\nselect count(*) from mntdb2.sys.tag;                                 -- 마운트한 테이블의 건수 확인\r\n\r\nselect to_char(min(time)), to_char(max(time)) from mntdb2.sys.tag;   -- 마운트한 테이블의 데이터 시간 범위 확인\r\n\r\numount database mntdb2;                                              -- 마운트 해제","height":198,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true}]}