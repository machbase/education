{"data":[{"id":"1689062366028419","contents":"이상치 제거\n======\nLSL/USL 소개\n------\nLSL(Lower Spec Limit)은 규격 하한을 나타내고, USL(Upper Spec Limit)은 규격 상한을 의미함\n\n마크베이스에서 제공하는 LSL/USL 기능은 태그테이블에 종속된 태그 메타데이터 테이블을 통해서만 지원됨\n\nLSL/USL 기능은 특정 TAG ID에 대한 사양 상한 및 하한을 설정하여 예상치 못한 데이터 입력에 대한 보호 조치 역할을 함\n\n제약 사항\n------\nLSL/USL 설정에는 몇 가지 제약이 있음\n\n- CLUSTER EDITION은 LSL/USL 기능을 지원하지 않음\n- LSL/USL을 설정하려면 태그 테이블에서 Value라는 세 번째 열을 SUMMARIZED로 설정해야 함\n- LSL은 USL보다 작거나 같아야 하며 값 열의 입력 값은 LSL과 USL 사이입니다. (LSL <= 값 <= USL)\n- LSL/USL 설정 이전에 입력한 데이터는 검증되지 않음\n- 메타테이블에서 LSL/USL 컬럼값을 NULL로 설정하면 입력 데이터의 유효성을 검사하지 않음\n- LSL/USL 기능은 하나씩 사용 가능함. 즉 규격 상한만 적용하고 싶을 때는 USL만 설정 가능\n- USL 기능만 사용할 경우 USL보다 작은 값은 검증하지 않음\n\nLSL/USL 기능 설정 및 활용\n------\nLSL/USL 기능을 사용하려면 태그 메타 테이블의 컬럼에 특정 키워드를 설정해야함\n\n- LSL은 LOWER LIMIT 키워드를 사용\n- USL은 UPPER LIMIT 키워드를 사용\n\n태그 테이블을 생성할 때, 메타 컬럼을 추가할 때 설정이 가능하며 아래는 그 예시임\n\nCRAETE","height":503,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1692694238727935","contents":"DROP TABLE out_tag;\r\n\r\nCREATE TAG TABLE out_tag (\r\n    tag_id  VARCHAR(50) PRIMARY KEY,\r\n    time    DATETIME    BASETIME,\r\n    value   DOUBLE     SUMMARIZED) \r\nMETADATA (\r\n    lsl     DOUBLE LOWER LIMIT,\r\n    usl     DOUBLE UPPER LIMIT \r\n) TAG_PARTITION_COUNT=1;","height":213,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1692694258307116","contents":"두 개의 컬럼을 같이 사용할 수도 있지만 원한다면 LSL/USL 둘 중 하나만을 사용할 수도 있음\r\n\r\nLSL 하나만 설정할 경우 LSL보다 큰 데이터에 대해서는 검증하지 않음. 즉 USL == NULL 과 같음","height":89,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1692694264148577","contents":"DROP TABLE out_tag;\r\n\r\nCREATE TAG TABLE out_tag (\r\n    tag_id  VARCHAR(50) PRIMARY KEY,\r\n    time    DATETIME    BASETIME,\r\n    value   DOUBLE     SUMMARIZED) \r\nMETADATA (\r\n    lsl    DOUBLE LOWER LIMIT  \r\n) TAG_PARTITION_COUNT=1;","height":201,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1720760168084450","contents":"ADD COLUMN\r\n------\r\nADD COLUMN 을 이용하여 추가할 경우 기본 값은 NULL","height":76,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1692694340370313","contents":"DROP TABLE out_tag;\r\n\r\nCREATE TAG TABLE out_tag (\r\n    tag_id  VARCHAR(50) PRIMARY KEY,\r\n    time    DATETIME    BASETIME,\r\n    value   DOUBLE     SUMMARIZED\r\n) TAG_PARTITION_COUNT=1;\r\n\r\nALTER TABLE _out_tag_meta ADD COLUMN (lsl DOUBLE LOWER LIMIT);\r\nALTER TABLE _out_tag_meta ADD COLUMN (usl DOUBLE UPPER LIMIT);","height":225,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1692694380748540","contents":"CREATE에서 처럼 하나의 속성만 추가하는 것도 가능함","height":57,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1692694422435115","contents":"DROP TABLE out_tag;\r\n\r\nCREATE TAG TABLE out_tag (\r\n    tag_id  VARCHAR(50) PRIMARY KEY,\r\n    time    DATETIME    BASETIME,\r\n    value   DOUBLE     SUMMARIZED\r\n) TAG_PARTITION_COUNT=1;\r\n\r\nALTER TABLE _out_tag_meta ADD COLUMN (lsl DOUBLE LOWER LIMIT);","height":206,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1720761101327566","contents":"INSERT\r\n------\r\nLSL/USL 기능을 설정하고 특정 TAG ID에 대해 LSL/USL을 설정하면 데이터 입력 준비가 완료됨","height":85,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1692694445980160","contents":"INSERT INTO out_tag metadata VALUES ('TAG_01', 100.0, 200.0); -- 1st error. only lsl(lower) column.\r\n\r\nALTER TABLE _out_tag_meta ADD COLUMN (usl DOUBLE UPPER LIMIT); -- add usl(upper) column.\r\n\r\nINSERT INTO out_tag metadata VALUES ('TAG_01', 100.0, 200.0); -- 2nd no error.\r\n\r\nselect * from _out_tag_meta;","height":169,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1720761157492207","contents":"이렇게 설정한 뒤 태그 데이터를 입력하면 아래와 같이 동작함","height":48,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1692694472931400","contents":"INSERT INTO out_tag VALUES ('TAG_01', NOW, 95.2);  --Failure [ERR-02342: SUMMARIZED value is less than LOWER LIMIT.]\r\n\r\nINSERT INTO out_tag VALUES ('TAG_01', NOW, 100.0); --Success (Inclusive)\r\n\r\nINSERT INTO out_tag VALUES ('TAG_01', NOW, 150.5); --Success\r\n\r\nINSERT INTO out_tag VALUES ('TAG_01', NOW, 200.0); --Success (Inclusive)\r\n\r\nINSERT INTO out_tag VALUES ('TAG_01', NOW, 205.5); --Failure [ERR-02341: SUMMARIZED value is greater than UPPER LIMIT.]","height":195,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1720680521090987","contents":"값을 입력한 뒤 태그 테이블을 조회해보면 확실하게 검증된 데이터만 입력된 것을 확인 가능함","height":45,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1720680545726482","contents":"SELECT tag_id, to_char(time), value, lsl, usl FROM out_tag;","height":56,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true},{"id":"1720681811893187","contents":"UPDATE\r\n------\r\n태그 메타 테이블에 설정된 LSL/USL 컬럼의 값을 수정 가능함 \r\n\r\n이미 태그 데이터 테이블에 입력된 데이터에 대해서는 검증하지 않기 때문에 주의해서 사용해야함","height":117,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"1720681641072873","contents":"UPDATE out_tag metadata SET lsl = 10, usl = 100 WHERE tag_id = 'TAG_01';\r\n\r\nSELECT * FROM _out_tag_meta;","height":103,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"]],"result":"","status":true,"brief":true},{"id":"1720680634102371","contents":"DELETE\r\n------\r\n태그 메타 테이블에는 DROP COLUMN 기능을 지원하지 않기 때문에 LSL/USL 컬럼만을 직접적으로 삭제할 수 있는 방법은 없음\r\n\r\n컬럼을 삭제하는 것은 불가능하지만 LSL/USL 의 제약 조건을 역이용하여 LSL/USL 컬럼 값을 NULL 로 설정한다면 제약 없이 데이터 입력이 가능함","height":118,"lineHeight":19,"minimal":true,"type":"mrk","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true},{"id":"172068070986164","contents":"UPDATE out_tag metadata SET lsl = NULL, usl = NULL WHERE tag_id = 'TAG_01';\r\n\r\nSELECT * FROM _out_tag_meta;","height":80,"lineHeight":19,"minimal":false,"type":"sql","tqlType":null,"lang":[["markdown","Markdown"],["SQL","SQL"],["go","TQL"],["shell","Shell"]],"result":"","status":true,"brief":true}]}